apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-generate-users
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-2"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-delete-users
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-2"
rules:
  - apiGroups: [""]
    resourceNames: ["password-file-db"]
    resources: ["secrets"]
    verbs: ["delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-generate-users
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-2"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-generate-users
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-1"
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: {{ .Release.Name }}-generate-users
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-generate-users
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-delete-users
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-1"
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: {{ .Release.Name }}-generate-users
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-delete-users
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-generate-password-db-file
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: {{ .Release.Name }}-generate-users
      restartPolicy: Never
      containers:
      - name: user-creation
        image: ghcr.io/ontopic-vkg/ontopic-helm/user-creation:helm-{{ .Chart.AppVersion }}
        command:
        command:
        - "sh"
        - "-c"
        - >-
            FILE="/users/users";
            if [ -f "$FILE" ]; then
              /usr/local/bin/entrypoint.sh -j $FILE -o /mnt/secret;
            else
              echo "No password-db-users secret found";
            fi;
            exit 0
        volumeMounts:
        - name: users
          mountPath: /users
          readOnly: true
        - name: secret
          mountPath: /mnt/secret
      - name: create-secret
        image: bitnami/kubectl:latest
        command:
        - "sh"
        - "-c"
        - >-
            FILE="/mnt/secret/password-file-db";
            NAME="password-file-db";
            if [ -f "$FILE" ]; then
              kubectl delete secret $NAME;
              kubectl create secret generic $NAME --from-file=$NAME=$FILE;
            fi;
            exit 0
        volumeMounts:
        - name: secret
          mountPath: /mnt/secret
      restartPolicy: Never
      volumes:
      volumes:
      - name: users
        secret:
          secretName: password-db-users
      - name: secret
        emptyDir: {}
