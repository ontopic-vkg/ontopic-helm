apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-pre-install
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "-2"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-pre-install
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "-2"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-pre-install
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "-1"
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: {{ .Release.Name }}-pre-install
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-pre-install
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-generate-cookie-secret
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "1"
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: {{ .Release.Name }}-pre-install
      restartPolicy: Never
      containers:
      - name: generate-secret
        image: ghcr.io/ontopic-vkg/ontopic-helm/identity-service:helm-{{ .Chart.AppVersion }}
        command: ["sh", "-c", "/usr/bin/entrypoint generate cookie > /mnt/secret/cookie-secret && echo 'Cookie generated' && cat /mnt/secret/cookie-secret"]
        volumeMounts:
        - name: secret
          mountPath: /mnt/secret
      - name: create-secret
        image: bitnami/kubectl:latest
        command: ["sh", "-c", "while [ ! -f /mnt/secret/cookie-secret ]; do echo 'Waiting for /mnt/secret/cookie-secret'; sleep 1; done; echo 'File /mnt/secret/cookie-secret found'; kubectl create secret generic cookie-secret --from-file=cookie-secret=/mnt/secret/cookie-secret; exit 0"]
        volumeMounts:
        - name: secret
          mountPath: /mnt/secret
      restartPolicy: Never
      volumes:
      - name: secret
        emptyDir: {}
